{
  "name": "line-animation",
  "type": "registry:ui",
  "description": "A simple line animation",
  "dependencies": [
    "framer-motion"
  ],
  "files": [
    {
      "type": "registry:ui",
      "content": "\"use client\";\r\nimport React, { useState, useEffect, useCallback } from \"react\";\r\nimport { motion, useAnimation } from \"framer-motion\";\r\n\r\nconst ContactPageAnimation = () => {\r\n  const [cursorPosition, setCursorPosition] = useState({ x: 0, y: 0 });\r\n  const [isHovering, setIsHovering] = useState(false);\r\n  const controls = useAnimation();\r\n\r\n  const handleMouseMove = useCallback(\r\n    (event: {\r\n      currentTarget: { getBoundingClientRect: () => DOMRect };\r\n      clientX: number;\r\n      clientY: number;\r\n    }) => {\r\n      const rect = event.currentTarget.getBoundingClientRect();\r\n      setCursorPosition({\r\n        x: event.clientX - rect.left,\r\n        y: event.clientY - rect.top,\r\n      });\r\n    },\r\n    []\r\n  );\r\n\r\n  useEffect(() => {\r\n    controls.start(\"visible\");\r\n  }, [controls]);\r\n\r\n  const svgVariants = {\r\n    hidden: { opacity: 0 },\r\n    visible: {\r\n      opacity: 1,\r\n      transition: {\r\n        duration: 1,\r\n        staggerChildren: 0.2,\r\n      },\r\n    },\r\n  };\r\n\r\n  const pathVariants = {\r\n    hidden: { pathLength: 0, opacity: 0 },\r\n    visible: {\r\n      pathLength: 1,\r\n      opacity: 1,\r\n      transition: {\r\n        duration: 2,\r\n        ease: \"easeInOut\",\r\n      },\r\n    },\r\n  };\r\n\r\n  const nodeVariants = {\r\n    hidden: { scale: 0, opacity: 0 },\r\n    visible: {\r\n      scale: 1,\r\n      opacity: 1,\r\n      transition: {\r\n        type: \"spring\",\r\n        stiffness: 300,\r\n        damping: 20,\r\n      },\r\n    },\r\n  };\r\n\r\n  const pulseVariants = {\r\n    hidden: { scale: 0.8, opacity: 0.5 },\r\n    visible: {\r\n      scale: 1.2,\r\n      opacity: 1,\r\n      transition: {\r\n        yoyo: Infinity,\r\n        duration: 1.5,\r\n        ease: \"easeInOut\",\r\n      },\r\n    },\r\n  };\r\n\r\n  const messageVariants = {\r\n    hidden: { x: -50, opacity: 0 },\r\n    visible: {\r\n      x: 0,\r\n      opacity: 1,\r\n      transition: {\r\n        type: \"spring\",\r\n        stiffness: 100,\r\n        damping: 10,\r\n        repeat: Infinity,\r\n        repeatDelay: 3,\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"w-full h-full relative\"\r\n      onMouseMove={handleMouseMove}\r\n      onMouseEnter={() => setIsHovering(true)}\r\n      onMouseLeave={() => setIsHovering(false)}\r\n    >\r\n      <motion.svg\r\n        viewBox=\"0 0 800 600\"\r\n        initial=\"hidden\"\r\n        animate=\"visible\"\r\n        variants={svgVariants}\r\n        className=\"w-full h-full\"\r\n      >\r\n        <defs>\r\n          <radialGradient\r\n            id=\"globalGradient\"\r\n            cx=\"50%\"\r\n            cy=\"50%\"\r\n            r=\"50%\"\r\n            fx=\"50%\"\r\n            fy=\"50%\"\r\n          >\r\n            <stop offset=\"0%\" stopColor=\"#3B82F6\" stopOpacity=\"0.3\" />\r\n            <stop offset=\"100%\" stopColor=\"#3B82F6\" stopOpacity=\"0\" />\r\n          </radialGradient>\r\n          <filter id=\"glow\">\r\n            <feGaussianBlur stdDeviation=\"3.5\" result=\"coloredBlur\" />\r\n            <feMerge>\r\n              <feMergeNode in=\"coloredBlur\" />\r\n              <feMergeNode in=\"SourceGraphic\" />\r\n            </feMerge>\r\n          </filter>\r\n        </defs>\r\n\r\n        {/* Global connectivity background */}\r\n        <motion.circle\r\n          cx=\"400\"\r\n          cy=\"300\"\r\n          r=\"280\"\r\n          fill=\"url(#globalGradient)\"\r\n          variants={nodeVariants}\r\n        />\r\n\r\n        {/* Communication paths */}\r\n        <motion.path\r\n          d=\"M100,300 C250,100 550,500 700,300\"\r\n          stroke=\"#60A5FA\"\r\n          strokeWidth=\"2\"\r\n          fill=\"none\"\r\n          filter=\"url(#glow)\"\r\n          variants={pathVariants}\r\n        />\r\n        <motion.path\r\n          d=\"M100,400 C250,600 550,200 700,400\"\r\n          stroke=\"#60A5FA\"\r\n          strokeWidth=\"2\"\r\n          fill=\"none\"\r\n          filter=\"url(#glow)\"\r\n          variants={pathVariants}\r\n        />\r\n\r\n        {/* Communication nodes */}\r\n        {[\r\n          { cx: 100, cy: 300 },\r\n          { cx: 700, cy: 300 },\r\n          { cx: 100, cy: 400 },\r\n          { cx: 700, cy: 400 },\r\n          { cx: 400, cy: 300 },\r\n        ].map((node, index) => (\r\n          <g key={index}>\r\n            <motion.circle\r\n              cx={node.cx}\r\n              cy={node.cy}\r\n              r=\"12\"\r\n              fill=\"#2563EB\"\r\n              variants={nodeVariants}\r\n              whileHover={{ scale: 1.5, fill: \"#3B82F6\" }}\r\n            />\r\n            <motion.circle\r\n              cx={node.cx}\r\n              cy={node.cy}\r\n              r=\"20\"\r\n              stroke=\"#60A5FA\"\r\n              strokeWidth=\"2\"\r\n              fill=\"none\"\r\n              variants={pulseVariants}\r\n            />\r\n          </g>\r\n        ))}\r\n\r\n        {/* Message animations */}\r\n        <motion.circle\r\n          cx=\"100\"\r\n          cy=\"300\"\r\n          r=\"8\"\r\n          fill=\"#F59E0B\"\r\n          variants={messageVariants}\r\n        />\r\n        <motion.circle\r\n          cx=\"700\"\r\n          cy=\"400\"\r\n          r=\"8\"\r\n          fill=\"#F59E0B\"\r\n          variants={messageVariants}\r\n        />\r\n\r\n        {/* Interactive cursor effect */}\r\n        <motion.circle\r\n          cx={cursorPosition.x}\r\n          cy={cursorPosition.y}\r\n          r={isHovering ? \"30\" : \"0\"}\r\n          fill=\"#F59E0B\"\r\n          initial={{ opacity: 0 }}\r\n          animate={{ opacity: isHovering ? 0.3 : 0 }}\r\n          transition={{ duration: 0.3 }}\r\n        />\r\n\r\n        {/* Central icon */}\r\n        <motion.path\r\n          d=\"M385,285 h30 v30 h-30 Z M400,270 v60 M370,300 h60\"\r\n          stroke=\"#F59E0B\"\r\n          strokeWidth=\"4\"\r\n          fill=\"none\"\r\n          variants={pathVariants}\r\n        />\r\n\r\n        {/* Animated text */}\r\n        <motion.text\r\n          x=\"400\"\r\n          y=\"550\"\r\n          textAnchor=\"middle\"\r\n          fill=\"#fff\"\r\n          fontSize=\"24\"\r\n          fontWeight=\"bold\"\r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ delay: 2, duration: 0.5 }}\r\n        >\r\n          Connect • Communicate • Collaborate\r\n        </motion.text>\r\n      </motion.svg>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactPageAnimation;\r\n",
      "path": "ui/contact-line.tsx",
      "target": "components/svg-animations/contact-line.tsx"
    }
  ]
}